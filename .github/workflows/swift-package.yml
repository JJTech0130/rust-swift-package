name: Generate Swift Package

on: push

jobs:
  build:
    runs-on: macos-latest
    #if: ${{ false }}  # disable for now
    steps:
    - uses: actions/checkout@v3
    
    # TODO: Find a way to cache this
    - name: Add aarch64-apple-ios target
      run: rustup target add aarch64-apple-ios
    - name: Add x86_64-apple-ios target
      run: rustup target add x86_64-apple-ios
       
    - name: Generate XCFramework
      run: make xcframework
      
    # This is kind of hacky...  
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: xcframework
        path: target/*.xcframework/
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v3
    
    - name: Copy template out
      run: cp Package.template.swift ..
      
    - name: Extract current branch
      run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      id: extract_branch
    
    - name: Create output branch
      run: git switch --orphan swift/${{ steps.extract_branch.outputs.branch }}
      
    - name: Copy template in
      run: cp ../Package.template.swift Package.swift
      
    - name: Assemble URL
      run: echo "::set-output name=url::https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/xcframework.zip"
      id: assemble_url
      
    - name: Calculate hash
      run: echo "::set-output name=hash::$(curl -sL ${{ steps.assemble_url.outputs.url }} | shasum -a 256 | head -c 64)"
      id: calculate_hash
      
    - name: Replace $URL
      run: sed -i -e 's|$URL|${{ steps.assemble_url.outputs.url }}|g' Package.swift
      
    - name: Replace $CHECKSUM
      run: sed -i -e 's/$CHECKSUM/${{ steps.calculate_hash.outputs.hash }}/g' Package.swift
      
    #- name: cat manifest
    #  run: cat Package.swift
    
    - run: git add Package.swift
    
    - run: git commit -m "test commit"
    
    # (just use --all rather than trying to insert the target branch name)
    - run: git push -u origin --all
      
    #- name: git auto commit
    #  uses: stefanzweifel/git-auto-commit-action@v4.14.1
    #  with: 
    #      commit_message: sync manifest with xcframework
          #commit_user_name: SideStore Bot
          #commit_user_email: 108193881+SideStorer@users.noreply.github.com
          #commit_author: SideStorer <108193881+SideStorer@users.noreply.github.com>
      
    #- name: check if output branch exists
    #  run: |
    #    git show-ref --verify --quiet refs/heads/swift/${{ steps.extract_branch.outputs.branch }}
    #    echo "::set-output name=should_create::$?"
    #  id: branch_exists
      
    #- name: switch to output branch
    #  run: |
    #    echo ${{ steps.branch_exists.outputs.should_create }}
    #    if [ ${{ steps.branch_exists.outputs.should_create }} -ne 0 ]; then
    #      echo "creating branch"
    #    else
    #      echo "branch exists"
    #    fi
        
        
   # - name: switch to output branch
     # run: |
   #     echo "swift/${{ steps.extract_branch.outputs.branch }}"
      #echo "::set-output name=action_fruit::strawberry"

    #- name: check for branch
    #  env:
    #    branch: 
    #  run: |
    #    git show-ref --verify --quiet refs/heads/<branch-name>
    #    ret=$?
    #    if [ $ret -ne 0 ]; then
    #      echo "
    #    else
    #      echo "In Else"
    ##   fi
